{"version":3,"sources":["load-templates.js","load-resources.js","load-variables.js","autocomplete.js","tree-select.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"breakdown.js","sourcesContent":[";(function(window, document, $){\n\n    $(function(){\n        var breakdowns = {};\n\n        var loader = $('<span class=\"label label-info\"><i class=\"fa fa-refresh fa-spin\"></i> Loading...</span>');\n        var errorMessage = $('<span class=\"label label-danger\"><i class=\"fa fa-exclamation-circle\"></i> <span></span></span>');\n        var templateInput = $('#TemplateID');\n        var breakdownEmptyText = templateInput.find('option[value=\"\"]').text();\n        var project = $('#ProjectId').val();\n\n        var hideLoader = function () {\n            loader.remove();\n        };\n\n        var showLoader = function () {\n            hideError();\n            templateInput.before(loader);\n        };\n\n        var showError = function (message) {\n            hideLoader();\n            errorMessage.find('span').text(message);\n            templateInput.before(errorMessage);\n        };\n\n        var hideError = function() {\n            errorMessage.remove();\n        };\n\n        var fillBreakdowns = function (options) {\n            var oldValue = templateInput.val();\n\n            var optionsHtml = '<option value=\"\">' + breakdownEmptyText + '</option>';\n\n            for (var key in options) {\n                var selected = '';\n                if (key == oldValue) {\n                    selected = ' selected=\"selected\"';\n                }\n                optionsHtml += '<option value=\"' + key + '\"' + selected +'>' + options[key] + '</option>';\n            }\n\n            templateInput.html(optionsHtml);\n        };\n\n        $('.activity-input').on('change', function(){\n\n            if (this.checked) {\n                var value = this.value;\n\n                if (value) {\n                    if (breakdowns[value]) {\n                        fillBreakdowns(breakdowns[value]);\n                    } else {\n                        showLoader();\n                        $.ajax({ url: '/api/breakdown-template', dataType: 'json', data: {activity: value ,project_id:project}})\n                            .then(function(response){\n                                fillBreakdowns(response);\n                                hideLoader();\n                            }, function(){\n                                showError('Cannot load breakdowns');\n                                fillBreakdowns([]);\n                            });\n                    }\n                } else {\n                    fillBreakdowns([]);\n                }\n            }\n\n        }).change();\n    });\n\n}(window, document, jQuery));",";(function(window, document, $) {\n\n    //Cache important elements\n    var templateInput = $('#TemplateID');\n    var resourcesContainer = $('#resourcesContainer');\n    var costInput = $('#CostAccount');\n    var wbsLevel = $('#WbsID');\n\n    //Get templates contents\n    var emptyAlert = $('#resourcesEmptyAlert').html();\n    var resourcesLoading = $('#resourcesLoading').html();\n    var resourcesError = $('#resourcesError').html();\n    var containerTemplate = $('#containerTemplate').html();\n    var resourceRowTemplate = $('#resourceRowTemplate').html();\n    var variableTemplate = $('#variableTemplate').html();\n\n    templateInput.on('change', function(){\n        loadResources();\n    });\n\n    function loadResources()\n    {\n        var value = templateInput.val();\n        var costAccount = costInput.val();\n        var wbs = wbsLevel.val();\n        if (value && costAccount) {\n            showLoading();\n            $.ajax({\n                url: '/api/std-activity-resource',\n                data: {template: value, cost_account: costAccount ,wbs_level_id:wbs},\n                dataType: 'json'\n            }).done(function(response){\n                buildResources(response);\n            }).error(function(){\n                showError();\n            });\n        } else {\n            showEmpty();\n        }\n    }\n\n    function showLoading() {\n        resourcesContainer.html(resourcesLoading);\n    }\n\n    function showError() {\n        resourcesContainer.html(resourcesError);\n    }\n\n    function showEmpty() {\n        resourcesContainer.html(emptyAlert);\n    }\n\n    function buildResources(resources) {\n        var res;\n        var counter = 0;\n        var key;\n\n        var table = $(containerTemplate);\n\n        for (res in resources) {\n            var rowObject = $(resourceRowTemplate.replace(/##/g, counter));\n\n            for (key in resources[res]) {\n                var input = rowObject.find('[j-model=\"' + key + '\"]');\n                input.val(resources[res][key]);\n            }\n\n            if ($.isPlainObject(resources[res].variables) && !$.isEmptyObject(resources[res].variables)) {\n                rowObject.find('.edit-variables').show();\n                var variablesContainer = rowObject.find('.variables-container');\n                var variableHtml = '';\n                for (var order in resources[res].variables) {\n                    variableHtml = $(variableTemplate.replace(/%res%/g, counter).replace(/%index%/g, order));\n                    variableHtml.find('label.var-name').html(resources[res].variables[order]);\n                    variablesContainer.append(variableHtml);\n                }\n            } else {\n                rowObject.find('.edit-variables').hide();\n            }\n\n            table.find('tbody').append(rowObject);\n            counter++;\n        }\n\n        resourcesContainer.html('').append(table);\n    }\n\n    var costAccountsCache = {};\n    costInput.on('change', function(){\n        var val = $(this).val();\n        if (val && $('[j-model=\"budget_qty\"]').length == 0) {\n            loadResources();\n        }\n\n        if (costAccountsCache.hasOwnProperty(val)) {\n            var account = costAccountsCache[val];\n            $('[j-model=\"budget_qty\"]').val(account.budget_qty);\n            $('[j-model=\"eng_qty\"]').val(account.eng_qty);\n        } else {\n            resourcesContainer.prepend(resourcesLoading);\n            $.ajax({\n                url: '/api/cost-accounts/account',\n                data: {account: val},\n                dataType: 'json'\n            }).then(function(account){\n                costAccountsCache[val] = account;\n                $('[j-model=\"budget_qty\"]').val(account.budget_qty);\n                $('[j-model=\"eng_qty\"]').val(account.eng_qty);\n                resourcesContainer.find('#resourcesLoading').remove();\n            }, function() {\n                resourcesContainer.find('#resourcesLoading').remove();\n            });\n        }\n    });\n}(window, document, jQuery));",";(function (w, d, $) {\n    $(function () {\n        var variablesPane = $('#VariablesPane');\n        var setVariablesPane = $('#SetVariablesPane');\n        var variableTemplate = $('#variableTemplate').html();\n\n        var buildVariables = function (variables) {\n            var empty = (Object.keys(variables).length == 0);\n\n            if (!empty) {\n                var key, prop, variable, varHtml, html = '';\n                setVariablesPane.show();\n                for (key in variables) {\n                    variable = variables[key];\n                    varHtml = variableTemplate;\n                    for (prop in variable) {\n                        console.log(prop);\n                        var regexp = new RegExp('\\{' + prop + '\\}', 'g');\n                        varHtml = varHtml.replace(regexp, variable[prop]);\n                    }\n\n                    html += varHtml;\n                }\n                variablesPane.html(html);\n            }\n        }\n\n        variablesPane.html('');\n        setVariablesPane.hide();\n\n        var activities = $('.activity-input').on('change', function () {\n            if (this.checked) {\n                var value = $(this).val();\n                if (value) {\n                    $.ajax({\n                        url: '/api/std-activity/variables/' + value,\n                        dataType: 'json'\n                    }).success(buildVariables);\n                }\n            }\n        }).change();\n    });\n}(window, document, jQuery));\n","(function (window, document, $) {\n    var listTemplate = '<div class=\"panel panel-info autocomplete-panel\"><div class=\"list-group\"></div></div>';\n    var loadingTemplate = '<div class=\"list-group-item text-center\"><i class=\"fa fa-spinner fa-spin\"></i></div>';\n    var loadingError = '<div class=\"list-group-item list-group-item-danger\"><i class=\"fa fa-exclamation-circle\"></i> Error loading options</div>';\n    var emptyTemplate = '<div class=\"list-group-item list-group-item-warning\"><i class=\"fa fa-exclamation-triangle\"></i> No options found</div>'\n\n\n    var buildOptions = function (options) {\n        var isArray = $.isArray(options);\n        var isObject = $.isPlainObject(options);\n\n        if (!(isArray && options.length) && !(isObject && !$.isEmptyObject(options))) {\n            return emptyTemplate;\n        }\n\n        var html = '';\n\n        for (var i in options) {\n            if (options.hasOwnProperty(i)) {\n                var val = isArray ? options[i] : i;\n                html += '<a href=\"#\" class=\"list-group-item option-link\" data-val=\"' + val + '\">' + options[i] + '</a>';\n            }\n        }\n\n        return html;\n    };\n\n    $.fn.completeList = function (options) {\n        $(this).each(function (index, element) {\n            var $element = $(element);\n\n            $element.attr('autocomplete', 'off');\n            $element.parents('.form-group').css({position: 'relative'});\n\n            var $list = $(listTemplate);\n            var $body = $list.find('.list-group');\n\n            var lastValue = '';\n\n            var loadOptions = function () {\n                var optionsHtml = '';\n                var val = $element.val();\n                if (options.options && ($.isArray(options.options) || $.isPlainObject(options.options))) {\n                    optionsHtml = buildOptions(options.options);\n                    $body.html(optionsHtml);\n                } else if ($body.data('options') && lastValue === val) {\n                    optionsHtml = buildOptions($body.data('options'));\n                    $body.html(optionsHtml);\n                } else if (options.url) {\n                    $body.html(loadingTemplate);\n                    $.ajax({\n                        type: 'get',\n                        data: {term: val},\n                        url: options.url,\n                        dataType: 'json'\n                    }).then(function (result) {\n                        lastValue = val;\n                        optionsHtml = buildOptions(result);\n                        $body.html(optionsHtml);\n                    }, function () {\n                        $body.html(loadingError);\n                    });\n                } else {\n                    $body.html(emptyTemplate);\n                }\n            };\n\n            $element.on('focus', function () {\n                loadOptions();\n                $list.show();\n            }).on('blur', function () {\n                setTimeout(function () {\n                    $list.hide();\n                }, 100);\n            }).on('keyup', function (e) {\n                if (e.keyCode != 13 && e.keyCode != 38 && e.keyCode != 40) {\n                    loadOptions();\n                }\n            }).on('keydown', function (e) {\n                if (e.key.toLowerCase() == 'arrowdown') {\n                    if ($list.find('a.active').length == 0) {\n                        $list.find('a').first().addClass('active');\n                    } else {\n                        if ($list.find('a.active').next('a').length) {\n                            $list.find('a.active').removeClass('active').next('a').addClass('active');\n                        }\n                    }\n                } else if (e.key.toLowerCase() == 'arrowup') {\n                    if ($list.find('a.active').length == 0) {\n                        $list.find('a').first().addClass('active');\n                    } else {\n                        if ($list.find('a.active').prev('a').length) {\n                            $list.find('a.active').removeClass('active').prev('a').addClass('active');\n                        }\n                    }\n                }\n            }).on('keyup keydown keypress', function (e) {\n                if (e.keyCode == 13) {\n                    e.preventDefault();\n                    var text = $list.find('a.active').text();\n                    if (text) {\n                        $(this).val(text).change();\n                        $list.hide();\n                    }\n                }\n            });\n\n            $body.on('click', '.option-link', function (e) {\n                e.preventDefault();\n                $element.val($(this).data('val')).change();\n            });\n\n            $element.after($list.hide());\n        });\n    };\n}(window, document, jQuery));","$(function () {\n    'use strict';\n\n    $('.tree-radio').on('change', function(){\n        if (this.checked) {\n            var selector = '#' + $(this).parents('.modal').attr('id');\n            var trigger = $('[href=\"' + selector +'\"]');\n\n            var label = $(this).data('label');\n            if (label) {\n                trigger.text(label);\n            } else {\n                var stack = [];\n                var parent = $(this).closest('.tree--item--label');\n                var text = parent.find('.node-label').text();\n                stack.push(text);\n\n                parent = parent.parents('li').first().parents('li').first();\n\n                while (parent.length) {\n                    text = parent.find('.node-label').first().text();\n                    stack.push(text);\n                    parent = parent.parents('li').first();\n                }\n\n                trigger.html(stack.reverse().join(' &raquo; '));\n            }\n        }\n    });\n\n    $('.remove-tree-input').on('click', function (e) {\n        e.preventDefault();\n        $(this).parent().find('.tree-open').text($(this).data('label'));\n        $($(this).data('target')).find('.tree-radio').removeAttr('checked');\n    });\n});"]}