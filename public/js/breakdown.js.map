{"version":3,"sources":["load-templates.js","load-resources.js","autocomplete.js","tree-select.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"breakdown.js","sourcesContent":[";(function(window, document, $){\r\n\r\n    $(function(){\r\n        var breakdowns = {};\r\n\r\n        var loader = $('<span class=\"label label-info\"><i class=\"fa fa-refresh fa-spin\"></i> Loading...</span>');\r\n        var errorMessage = $('<span class=\"label label-danger\"><i class=\"fa fa-exclamation-circle\"></i> <span></span></span>');\r\n        var templateInput = $('#TemplateID');\r\n        var breakdownEmptyText = templateInput.find('option[value=\"\"]').text();\r\n\r\n        var hideLoader = function () {\r\n            loader.remove();\r\n        };\r\n\r\n        var showLoader = function () {\r\n            hideError();\r\n            templateInput.before(loader);\r\n        };\r\n\r\n        var showError = function (message) {\r\n            hideLoader();\r\n            errorMessage.find('span').text(message);\r\n            templateInput.before(errorMessage);\r\n        };\r\n\r\n        var hideError = function() {\r\n            errorMessage.remove();\r\n        };\r\n\r\n        var fillBreakdowns = function (options) {\r\n            var oldValue = templateInput.val();\r\n\r\n            var optionsHtml = '<option value=\"\">' + breakdownEmptyText + '</option>';\r\n\r\n            for (var key in options) {\r\n                var selected = '';\r\n                if (key == oldValue) {\r\n                    selected = ' selected=\"selected\"';\r\n                }\r\n                optionsHtml += '<option value=\"' + key + '\"' + selected +'>' + options[key] + '</option>';\r\n            }\r\n\r\n            templateInput.html(optionsHtml);\r\n        };\r\n\r\n        $('.activity-input').on('change', function(){\r\n            var value = this.value;\r\n            if (value) {\r\n                if (breakdowns[value]) {\r\n                    fillBreakdowns(breakdowns[value]);\r\n                } else {\r\n                    showLoader();\r\n                    $.ajax({ url: '/api/breakdown-template', dataType: 'json', data: {activity: value}})\r\n                    .then(function(response){\r\n                        fillBreakdowns(response);\r\n                        hideLoader();\r\n                    }, function(){\r\n                        showError('Cannot load breakdowns');\r\n                        fillBreakdowns([]);\r\n                    });\r\n                }\r\n            } else {\r\n                fillBreakdowns([]);\r\n            }\r\n        }).change();\r\n    });\r\n\r\n}(window, document, jQuery));",";(function(window, document, $) {\r\n\r\n    //Cache important elements\r\n    var templateInput = $('#TemplateID');\r\n    var resourcesContainer = $('#resourcesContainer');\r\n    var costInput = $('#CostAccount');\r\n\r\n    //Get templates contents\r\n    var emptyAlert = $('#resourcesEmptyAlert').html();\r\n    var resourcesLoading = $('#resourcesLoading').html();\r\n    var resourcesError = $('#resourcesError').html();\r\n    var containerTemplate = $('#containerTemplate').html();\r\n    var resourceRowTemplate = $('#resourceRowTemplate').html();\r\n\r\n    templateInput.on('change', function(){\r\n        loadResources();\r\n    });\r\n\r\n    function loadResources()\r\n    {\r\n        var value = templateInput.val();\r\n        var costAccount = costInput.val();\r\n        if (value && costAccount) {\r\n            showLoading();\r\n            $.ajax({\r\n                url: '/api/std-activity-resource',\r\n                data: {template: value, cost_account: costAccount},\r\n                dataType: 'json'\r\n            }).done(function(response){\r\n                buildResources(response);\r\n            }).error(function(){\r\n                showError();\r\n            });\r\n        } else {\r\n            showEmpty();\r\n        }\r\n    }\r\n\r\n    function showLoading() {\r\n        resourcesContainer.html(resourcesLoading);\r\n    }\r\n\r\n    function showError() {\r\n        resourcesContainer.html(resourcesError);\r\n    }\r\n\r\n    function showEmpty() {\r\n        resourcesContainer.html(emptyAlert);\r\n    }\r\n\r\n    function buildResources(resources) {\r\n        var res;\r\n        var counter = 0;\r\n        var key;\r\n\r\n        var table = $(containerTemplate);\r\n\r\n        for (res in resources) {\r\n            var rowObject = $(resourceRowTemplate.replace(/##/g, counter));\r\n\r\n            for (key in resources[res]) {\r\n                var input = rowObject.find('[j-model=\"' + key + '\"]');\r\n                input.val(resources[res][key]);\r\n            }\r\n\r\n            table.find('tbody').append(rowObject);\r\n            counter++;\r\n        }\r\n\r\n        resourcesContainer.html('').append(table);\r\n    }\r\n\r\n    var costAccountsCache = {};\r\n    costInput.on('change', function(){\r\n        var val = $(this).val();\r\n        if (val && $('[j-model=\"budget_qty\"]').length == 0) {\r\n            loadResources();\r\n        }\r\n\r\n        if (costAccountsCache.hasOwnProperty(val)) {\r\n            var account = costAccountsCache[val];\r\n            $('[j-model=\"budget_qty\"]').val(account.budget_qty);\r\n            $('[j-model=\"eng_qty\"]').val(account.eng_qty);\r\n        } else {\r\n            resourcesContainer.prepend(resourcesLoading);\r\n            $.ajax({\r\n                url: '/api/cost-accounts/account',\r\n                data: {account: val},\r\n                dataType: 'json'\r\n            }).then(function(account){\r\n                costAccountsCache[val] = account;\r\n                $('[j-model=\"budget_qty\"]').val(account.budget_qty);\r\n                $('[j-model=\"eng_qty\"]').val(account.eng_qty);\r\n                resourcesContainer.find('#resourcesLoading').remove();\r\n            }, function() {\r\n                resourcesContainer.find('#resourcesLoading').remove();\r\n            });\r\n        }\r\n    });\r\n}(window, document, jQuery));","(function (window, document, $) {\r\n    var listTemplate = '<div class=\"panel panel-info autocomplete-panel\"><div class=\"list-group\"></div></div>';\r\n    var loadingTemplate = '<div class=\"list-group-item text-center\"><i class=\"fa fa-spinner fa-spin\"></i></div>';\r\n    var loadingError = '<div class=\"list-group-item list-group-item-danger\"><i class=\"fa fa-exclamation-circle\"></i> Error loading options</div>';\r\n    var emptyTemplate = '<div class=\"list-group-item list-group-item-warning\"><i class=\"fa fa-exclamation-triangle\"></i> No options found</div>'\r\n\r\n\r\n    var buildOptions = function (options) {\r\n        var isArray = $.isArray(options);\r\n        var isObject = $.isPlainObject(options);\r\n\r\n        if (!(isArray && options.length) && !(isObject && !$.isEmptyObject(options))) {\r\n            return emptyTemplate;\r\n        }\r\n\r\n        var html = '';\r\n\r\n        for (var i in options) {\r\n            if (options.hasOwnProperty(i)) {\r\n                var val = isArray ? options[i] : i;\r\n                html += '<a href=\"#\" class=\"list-group-item option-link\" data-val=\"' + val + '\">' + options[i] + '</a>';\r\n            }\r\n        }\r\n\r\n        return html;\r\n    };\r\n\r\n    $.fn.completeList = function (options) {\r\n        $(this).each(function (index, element) {\r\n            var $element = $(element);\r\n\r\n            $element.attr('autocomplete', 'off');\r\n            $element.parents('.form-group').css({position: 'relative'});\r\n\r\n            var $list = $(listTemplate);\r\n            var $body = $list.find('.list-group');\r\n\r\n            var lastValue = '';\r\n\r\n            var loadOptions = function () {\r\n                var optionsHtml = '';\r\n                var val = $element.val();\r\n                if (options.options && ($.isArray(options.options) || $.isPlainObject(options.options))) {\r\n                    optionsHtml = buildOptions(options.options);\r\n                    $body.html(optionsHtml);\r\n                } else if ($body.data('options') && lastValue === val) {\r\n                    optionsHtml = buildOptions($body.data('options'));\r\n                    $body.html(optionsHtml);\r\n                } else if (options.url) {\r\n                    $body.html(loadingTemplate);\r\n                    $.ajax({\r\n                        type: 'get',\r\n                        data: {term: val},\r\n                        url: options.url,\r\n                        dataType: 'json'\r\n                    }).then(function (result) {\r\n                        lastValue = val;\r\n                        optionsHtml = buildOptions(result);\r\n                        $body.html(optionsHtml);\r\n                    }, function () {\r\n                        $body.html(loadingError);\r\n                    });\r\n                } else {\r\n                    $body.html(emptyTemplate);\r\n                }\r\n            };\r\n\r\n            $element.on('focus', function () {\r\n                loadOptions();\r\n                $list.show();\r\n            }).on('blur', function () {\r\n                setTimeout(function () {\r\n                    $list.hide();\r\n                }, 100);\r\n            }).on('keyup', function (e) {\r\n                if (e.keyCode != 13 && e.keyCode != 38 && e.keyCode != 40) {\r\n                    loadOptions();\r\n                }\r\n            }).on('keydown', function (e) {\r\n                if (e.key.toLowerCase() == 'arrowdown') {\r\n                    if ($list.find('a.active').length == 0) {\r\n                        $list.find('a').first().addClass('active');\r\n                    } else {\r\n                        if ($list.find('a.active').next('a').length) {\r\n                            $list.find('a.active').removeClass('active').next('a').addClass('active');\r\n                        }\r\n                    }\r\n                } else if (e.key.toLowerCase() == 'arrowup') {\r\n                    if ($list.find('a.active').length == 0) {\r\n                        $list.find('a').first().addClass('active');\r\n                    } else {\r\n                        if ($list.find('a.active').prev('a').length) {\r\n                            $list.find('a.active').removeClass('active').prev('a').addClass('active');\r\n                        }\r\n                    }\r\n                }\r\n            }).on('keyup keydown keypress', function (e) {\r\n                if (e.keyCode == 13) {\r\n                    e.preventDefault();\r\n                    var text = $list.find('a.active').text();\r\n                    if (text) {\r\n                        $(this).val(text).change();\r\n                        $list.hide();\r\n                    }\r\n                }\r\n            });\r\n\r\n            $body.on('click', '.option-link', function (e) {\r\n                e.preventDefault();\r\n                $element.val($(this).data('val')).change();\r\n            });\r\n\r\n            $element.after($list.hide());\r\n        });\r\n    };\r\n}(window, document, jQuery));","$(function () {\r\n    'use strict';\r\n\r\n    $('.tree-radio').on('change', function(){\r\n        if (this.checked) {\r\n            var selector = '#' + $(this).parents('.modal').attr('id');\r\n            var trigger = $('[href=\"' + selector +'\"]');\r\n\r\n            var label = $(this).data('label');\r\n            if (label) {\r\n                trigger.text(label);\r\n            } else {\r\n                var stack = [];\r\n                var parent = $(this).closest('.tree--item--label');\r\n                var text = parent.find('.node-label').text();\r\n                stack.push(text);\r\n\r\n                parent = parent.parents('li').first().parents('li').first();\r\n\r\n                while (parent.length) {\r\n                    text = parent.find('.node-label').first().text();\r\n                    stack.push(text);\r\n                    parent = parent.parents('li').first();\r\n                }\r\n\r\n                trigger.html(stack.reverse().join(' &raquo; '));\r\n            }\r\n        }\r\n    });\r\n\r\n    $('.remove-tree-input').on('click', function (e) {\r\n        e.preventDefault();\r\n        $(this).parent().find('.tree-open').text($(this).data('label'));\r\n        $($(this).data('target')).find('.tree-radio').removeAttr('checked');\r\n    });\r\n});"]}